use std::time::Duration;

use macros::EnumIndex;
use serde::Deserialize;
use strum::EnumCount;
use strum_macros::{EnumCount, EnumIter};

use crate::traits::{AnimationGroupT, ContainerType};

#[derive(Clone, Copy, PartialEq, PartialOrd, Debug, Deserialize, EnumCount, EnumIndex)]
pub enum Creature {
    // Castle
    Pikeman,
    Halberdier,
    Archer,
    Marksman,
    Griffin,
    RoyalGriffin,
    Swordsman,
    Crusader,
    Monk,
    Zealot,
    Cavalier,
    Champion,
    Angel,
    Archangel,
    // Rampart
    Centaur,
    CentaurCaptain,
    Dwarf,
    BattleDwarf,
    WoodElf,
    GrandElf,
    Pegasus,
    SilverPegasus,
    DendroidGuard,
    DendroidSoldier,
    Unicorn,
    WarUnicorn,
    GreenDragon,
    GoldDragon,
    // Tower
    Gremlin,
    MasterGremlin,
    StoneGargoyle,
    ObsidianGargoyle,
    StoneGolem,
    IronGolem,
    Mage,
    ArchMage,
    Genie,
    MasterGenie,
    Naga,
    NagaQueen,
    Giant,
    Titan,
    // Inferno
    Imp,
    Familiar,
    Gog,
    Magog,
    HellHound,
    Cerberus,
    Demon,
    HornedDemon,
    PitFiend,
    PitLord,
    Efreeti,
    EfreetSultan,
    Devil,
    ArchDevil,
    // Necropolis
    Skeleton,
    SkeletonWarrior,
    WalkingDead,
    Zombie,
    Wight,
    Wraith,
    Vampire,
    VampireLord,
    Lich,
    PowerLich,
    BlackKnight,
    DreadKnight,
    BoneDragon,
    GhostDragon,
    // Dungeon
    Troglodyte,
    InfernalTroglodyte,
    Harpy,
    HarpyHag,
    Beholder,
    EvilEye,
    Medusa,
    MedusaQueen,
    Minotaur,
    MinotaurKing,
    Manticore,
    Scorpicore,
    RedDragon,
    BlackDragon,
    // Stronghold
    Goblin,
    Hobgoblin,
    WolfRider,
    WolfRaider,
    Orc,
    OrcChieftain,
    Ogre,
    OgreMagi,
    Roc,
    Thunderbird,
    Cyclops,
    CyclopsKing,
    Behemoth,
    AncientBehemoth,
    // Fortress
    Gnoll,
    GnollMarauder,
    Lizardman,
    LizardWarrior,
    SerpentFly,
    DragonFly,
    Basilisk,
    GreaterBasilisk,
    Gorgon,
    MightyGorgon,
    Wyvern,
    WyvernMonarch,
    Hydra,
    ChaosHydra,
    // Conflux
    Pixie,
    Sprite,
    AirElemental,
    StormElemental,
    WaterElemental,
    IceElemental,
    FireElemental,
    EnergyElemental,
    EarthElemental,
    MagmaElemental,
    PsychicElemental,
    MagicElemental,
    Firebird,
    Phoenix,
    // Neutral
    Peasant,
    Halfling,
    Boar,
    Rogue,
    Mummy,
    Nomad,
    Sharpshooter,
    Troll,
    GoldGolem,
    DiamondGolem,
    Enchanter,
    FaerieDragon,
    RustDragon,
    CrystalDragon,
    AzureDragon,
    // War Machines
    Ballista,
    FirstAidTent,
    Catapult,
    AmmoCart,
}

pub struct Stats {
    pub level: i32,
    pub attack: i32,
    pub defence: i32,
    pub damage: (i32, i32),
    pub health: i32,
    pub speed: i32,
    pub ammo_capacity: i32,
}

pub enum Ability {
    DoubleStrike,
    DoubleShot,

    ReturnAfterStrike,

    NoRetaliation,
    ExtraRetaliation,
    InfiniteRetaliations,

    Hatred { to: Box<[Creature]> },

    IgnoreDefence { percent: f32 },
}

#[derive(Clone, Copy, PartialEq)]
pub enum MovementType {
    Walk,
    Fly,
    Teleport,
}

#[derive(Clone, Copy, EnumCount, EnumIter)]
pub enum Sound {
    Attack,
    Defend,
    StartMoving,
    Move,
    EndMoving,
    Shoot,
    Wince,
    Killed,
}

pub struct Sounds([Option<&'static str>; Sound::COUNT]);

#[derive(Clone, Copy, EnumCount, EnumIter, EnumIndex)]
pub enum Animation {
    Moving,
    MouseOver,
    Standing,
    GettingHit,
    Defend,
    Death,
    UnusedDeath,
    TurnLeft,
    TurnRight,
    AttackUp,
    AttackStraight,
    AttackDown,
    ShootUp,
    ShootStraight,
    ShootDown,
    TwoHexAttackUp,
    TwoHexAttackStraight,
    TwoHexAttackDown,
    StartMoving,
    StopMoving,
}

impl Creature {
    pub const fn base_stats(&self) -> Stats {
        match self {
            // Castle
            Self::Pikeman => Stats {
                level: 1,
                attack: 4,
                defence: 5,
                damage: (1, 3),
                health: 10,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::Halberdier => Stats {
                level: 1,
                attack: 6,
                defence: 5,
                damage: (2, 3),
                health: 10,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Archer => Stats {
                level: 2,
                attack: 6,
                defence: 3,
                damage: (2, 3),
                health: 10,
                speed: 4,
                ammo_capacity: 12,
            },
            Self::Marksman => Stats {
                level: 2,
                attack: 6,
                defence: 3,
                damage: (2, 3),
                health: 10,
                speed: 6,
                ammo_capacity: 24,
            },
            Self::Griffin => Stats {
                level: 3,
                attack: 8,
                defence: 8,
                damage: (3, 6),
                health: 25,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::RoyalGriffin => Stats {
                level: 3,
                attack: 9,
                defence: 9,
                damage: (3, 6),
                health: 25,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::Swordsman => Stats {
                level: 4,
                attack: 10,
                defence: 12,
                damage: (6, 9),
                health: 35,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Crusader => Stats {
                level: 4,
                attack: 12,
                defence: 12,
                damage: (7, 10),
                health: 35,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::Monk => Stats {
                level: 5,
                attack: 12,
                defence: 7,
                damage: (10, 12),
                health: 30,
                speed: 5,
                ammo_capacity: 12,
            },
            Self::Zealot => Stats {
                level: 5,
                attack: 12,
                defence: 10,
                damage: (10, 12),
                health: 30,
                speed: 7,
                ammo_capacity: 24,
            },
            Self::Cavalier => Stats {
                level: 6,
                attack: 15,
                defence: 15,
                damage: (15, 25),
                health: 100,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Champion => Stats {
                level: 6,
                attack: 16,
                defence: 16,
                damage: (20, 25),
                health: 100,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::Angel => Stats {
                level: 7,
                attack: 20,
                defence: 20,
                damage: (50, 50),
                health: 200,
                speed: 12,
                ammo_capacity: 0,
            },
            Self::Archangel => Stats {
                level: 7,
                attack: 30,
                defence: 30,
                damage: (50, 50),
                health: 250,
                speed: 18,
                ammo_capacity: 0,
            },
            // Rampart
            Self::Centaur => Stats {
                level: 1,
                attack: 5,
                defence: 3,
                damage: (2, 3),
                health: 8,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::CentaurCaptain => Stats {
                level: 1,
                attack: 6,
                defence: 3,
                damage: (2, 3),
                health: 10,
                speed: 8,
                ammo_capacity: 0,
            },
            Self::Dwarf => Stats {
                level: 2,
                attack: 6,
                defence: 7,
                damage: (2, 4),
                health: 20,
                speed: 3,
                ammo_capacity: 0,
            },
            Self::BattleDwarf => Stats {
                level: 2,
                attack: 7,
                defence: 7,
                damage: (2, 4),
                health: 20,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::WoodElf => Stats {
                level: 3,
                attack: 9,
                defence: 5,
                damage: (3, 5),
                health: 15,
                speed: 6,
                ammo_capacity: 24,
            },
            Self::GrandElf => Stats {
                level: 3,
                attack: 9,
                defence: 5,
                damage: (3, 5),
                health: 15,
                speed: 7,
                ammo_capacity: 24,
            },
            Self::Pegasus => Stats {
                level: 4,
                attack: 9,
                defence: 8,
                damage: (5, 9),
                health: 30,
                speed: 8,
                ammo_capacity: 0,
            },
            Self::SilverPegasus => Stats {
                level: 4,
                attack: 9,
                defence: 10,
                damage: (5, 9),
                health: 30,
                speed: 12,
                ammo_capacity: 0,
            },
            Self::DendroidGuard => Stats {
                level: 5,
                attack: 9,
                defence: 12,
                damage: (10, 14),
                health: 55,
                speed: 3,
                ammo_capacity: 0,
            },
            Self::DendroidSoldier => Stats {
                level: 5,
                attack: 9,
                defence: 12,
                damage: (10, 14),
                health: 65,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::Unicorn => Stats {
                level: 6,
                attack: 15,
                defence: 14,
                damage: (18, 22),
                health: 90,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::WarUnicorn => Stats {
                level: 6,
                attack: 15,
                defence: 14,
                damage: (18, 22),
                health: 110,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::GreenDragon => Stats {
                level: 7,
                attack: 18,
                defence: 18,
                damage: (40, 50),
                health: 180,
                speed: 10,
                ammo_capacity: 0,
            },
            Self::GoldDragon => Stats {
                level: 7,
                attack: 27,
                defence: 27,
                damage: (40, 50),
                health: 250,
                speed: 16,
                ammo_capacity: 0,
            },
            // Tower
            Self::Gremlin => Stats {
                level: 1,
                attack: 3,
                defence: 3,
                damage: (1, 2),
                health: 4,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::MasterGremlin => Stats {
                level: 1,
                attack: 4,
                defence: 4,
                damage: (1, 2),
                health: 4,
                speed: 5,
                ammo_capacity: 8,
            },
            Self::StoneGargoyle => Stats {
                level: 2,
                attack: 6,
                defence: 6,
                damage: (2, 3),
                health: 16,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::ObsidianGargoyle => Stats {
                level: 2,
                attack: 7,
                defence: 7,
                damage: (2, 3),
                health: 16,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::StoneGolem => Stats {
                level: 3,
                attack: 7,
                defence: 10,
                damage: (4, 5),
                health: 30,
                speed: 3,
                ammo_capacity: 0,
            },
            Self::IronGolem => Stats {
                level: 3,
                attack: 9,
                defence: 10,
                damage: (4, 5),
                health: 35,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Mage => Stats {
                level: 4,
                attack: 11,
                defence: 8,
                damage: (7, 9),
                health: 25,
                speed: 5,
                ammo_capacity: 24,
            },
            Self::ArchMage => Stats {
                level: 4,
                attack: 12,
                defence: 9,
                damage: (7, 9),
                health: 30,
                speed: 7,
                ammo_capacity: 24,
            },
            Self::Genie => Stats {
                level: 5,
                attack: 12,
                defence: 12,
                damage: (13, 16),
                health: 40,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::MasterGenie => Stats {
                level: 5,
                attack: 12,
                defence: 12,
                damage: (13, 16),
                health: 40,
                speed: 11,
                ammo_capacity: 0,
            },
            Self::Naga => Stats {
                level: 6,
                attack: 16,
                defence: 13,
                damage: (20, 20),
                health: 110,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::NagaQueen => Stats {
                level: 6,
                attack: 16,
                defence: 13,
                damage: (30, 30),
                health: 110,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Giant => Stats {
                level: 7,
                attack: 19,
                defence: 16,
                damage: (40, 60),
                health: 150,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Titan => Stats {
                level: 7,
                attack: 24,
                defence: 24,
                damage: (40, 60),
                health: 300,
                speed: 11,
                ammo_capacity: 24,
            },
            // Inferno
            Self::Imp => Stats {
                level: 1,
                attack: 2,
                defence: 3,
                damage: (1, 2),
                health: 4,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Familiar => Stats {
                level: 1,
                attack: 4,
                defence: 4,
                damage: (1, 2),
                health: 4,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Gog => Stats {
                level: 2,
                attack: 6,
                defence: 4,
                damage: (2, 4),
                health: 13,
                speed: 4,
                ammo_capacity: 12,
            },
            Self::Magog => Stats {
                level: 2,
                attack: 7,
                defence: 4,
                damage: (2, 4),
                health: 13,
                speed: 6,
                ammo_capacity: 24,
            },
            Self::HellHound => Stats {
                level: 3,
                attack: 10,
                defence: 6,
                damage: (2, 7),
                health: 25,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Cerberus => Stats {
                level: 3,
                attack: 10,
                defence: 8,
                damage: (2, 7),
                health: 25,
                speed: 8,
                ammo_capacity: 0,
            },
            Self::Demon => Stats {
                level: 4,
                attack: 10,
                defence: 10,
                damage: (7, 9),
                health: 35,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::HornedDemon => Stats {
                level: 4,
                attack: 10,
                defence: 10,
                damage: (7, 9),
                health: 40,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::PitFiend => Stats {
                level: 5,
                attack: 13,
                defence: 13,
                damage: (13, 17),
                health: 45,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::PitLord => Stats {
                level: 5,
                attack: 13,
                defence: 13,
                damage: (13, 17),
                health: 45,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Efreeti => Stats {
                level: 6,
                attack: 16,
                defence: 12,
                damage: (16, 24),
                health: 90,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::EfreetSultan => Stats {
                level: 6,
                attack: 16,
                defence: 14,
                damage: (16, 24),
                health: 90,
                speed: 13,
                ammo_capacity: 0,
            },
            Self::Devil => Stats {
                level: 7,
                attack: 19,
                defence: 21,
                damage: (30, 40),
                health: 160,
                speed: 11,
                ammo_capacity: 0,
            },
            Self::ArchDevil => Stats {
                level: 7,
                attack: 26,
                defence: 28,
                damage: (30, 40),
                health: 200,
                speed: 17,
                ammo_capacity: 0,
            },
            // Necropolis
            Self::Skeleton => Stats {
                level: 1,
                attack: 5,
                defence: 4,
                damage: (1, 3),
                health: 6,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::SkeletonWarrior => Stats {
                level: 1,
                attack: 6,
                defence: 6,
                damage: (1, 3),
                health: 6,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::WalkingDead => Stats {
                level: 2,
                attack: 5,
                defence: 5,
                damage: (2, 3),
                health: 15,
                speed: 3,
                ammo_capacity: 0,
            },
            Self::Zombie => Stats {
                level: 2,
                attack: 5,
                defence: 5,
                damage: (2, 3),
                health: 20,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::Wight => Stats {
                level: 3,
                attack: 7,
                defence: 7,
                damage: (3, 5),
                health: 18,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Wraith => Stats {
                level: 3,
                attack: 7,
                defence: 7,
                damage: (3, 5),
                health: 18,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Vampire => Stats {
                level: 4,
                attack: 10,
                defence: 9,
                damage: (5, 8),
                health: 30,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::VampireLord => Stats {
                level: 4,
                attack: 10,
                defence: 10,
                damage: (5, 8),
                health: 40,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::Lich => Stats {
                level: 5,
                attack: 13,
                defence: 10,
                damage: (11, 13),
                health: 30,
                speed: 6,
                ammo_capacity: 12,
            },
            Self::PowerLich => Stats {
                level: 5,
                attack: 13,
                defence: 10,
                damage: (11, 15),
                health: 40,
                speed: 7,
                ammo_capacity: 24,
            },
            Self::BlackKnight => Stats {
                level: 6,
                attack: 16,
                defence: 16,
                damage: (15, 30),
                health: 120,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::DreadKnight => Stats {
                level: 6,
                attack: 18,
                defence: 18,
                damage: (15, 30),
                health: 120,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::BoneDragon => Stats {
                level: 7,
                attack: 17,
                defence: 15,
                damage: (25, 50),
                health: 150,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::GhostDragon => Stats {
                level: 7,
                attack: 19,
                defence: 17,
                damage: (25, 50),
                health: 200,
                speed: 14,
                ammo_capacity: 0,
            },
            // Dungeon
            Self::Troglodyte => Stats {
                level: 1,
                attack: 4,
                defence: 3,
                damage: (1, 3),
                health: 5,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::InfernalTroglodyte => Stats {
                level: 1,
                attack: 5,
                defence: 4,
                damage: (1, 3),
                health: 6,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Harpy => Stats {
                level: 2,
                attack: 6,
                defence: 5,
                damage: (1, 4),
                health: 14,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::HarpyHag => Stats {
                level: 2,
                attack: 6,
                defence: 6,
                damage: (1, 4),
                health: 14,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::Beholder => Stats {
                level: 3,
                attack: 9,
                defence: 7,
                damage: (3, 5),
                health: 22,
                speed: 5,
                ammo_capacity: 12,
            },
            Self::EvilEye => Stats {
                level: 3,
                attack: 10,
                defence: 8,
                damage: (3, 5),
                health: 22,
                speed: 7,
                ammo_capacity: 24,
            },
            Self::Medusa => Stats {
                level: 4,
                attack: 9,
                defence: 9,
                damage: (6, 8),
                health: 25,
                speed: 5,
                ammo_capacity: 4,
            },
            Self::MedusaQueen => Stats {
                level: 4,
                attack: 10,
                defence: 10,
                damage: (6, 8),
                health: 30,
                speed: 6,
                ammo_capacity: 8,
            },
            Self::Minotaur => Stats {
                level: 5,
                attack: 14,
                defence: 12,
                damage: (12, 20),
                health: 50,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::MinotaurKing => Stats {
                level: 5,
                attack: 15,
                defence: 15,
                damage: (12, 20),
                health: 50,
                speed: 8,
                ammo_capacity: 0,
            },
            Self::Manticore => Stats {
                level: 6,
                attack: 15,
                defence: 13,
                damage: (14, 20),
                health: 80,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Scorpicore => Stats {
                level: 6,
                attack: 16,
                defence: 14,
                damage: (14, 20),
                health: 80,
                speed: 11,
                ammo_capacity: 0,
            },
            Self::RedDragon => Stats {
                level: 7,
                attack: 19,
                defence: 19,
                damage: (40, 50),
                health: 180,
                speed: 11,
                ammo_capacity: 0,
            },
            Self::BlackDragon => Stats {
                level: 7,
                attack: 25,
                defence: 25,
                damage: (40, 50),
                health: 300,
                speed: 15,
                ammo_capacity: 0,
            },
            // Stronghold
            Self::Goblin => Stats {
                level: 1,
                attack: 4,
                defence: 2,
                damage: (1, 2),
                health: 5,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Hobgoblin => Stats {
                level: 1,
                attack: 5,
                defence: 3,
                damage: (1, 2),
                health: 5,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::WolfRider => Stats {
                level: 2,
                attack: 7,
                defence: 5,
                damage: (2, 4),
                health: 10,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::WolfRaider => Stats {
                level: 2,
                attack: 8,
                defence: 5,
                damage: (3, 4),
                health: 10,
                speed: 8,
                ammo_capacity: 0,
            },
            Self::Orc => Stats {
                level: 3,
                attack: 8,
                defence: 4,
                damage: (2, 5),
                health: 15,
                speed: 4,
                ammo_capacity: 12,
            },
            Self::OrcChieftain => Stats {
                level: 3,
                attack: 8,
                defence: 4,
                damage: (2, 5),
                health: 20,
                speed: 5,
                ammo_capacity: 24,
            },
            Self::Ogre => Stats {
                level: 4,
                attack: 13,
                defence: 7,
                damage: (6, 12),
                health: 40,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::OgreMagi => Stats {
                level: 4,
                attack: 13,
                defence: 7,
                damage: (6, 12),
                health: 60,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Roc => Stats {
                level: 5,
                attack: 13,
                defence: 11,
                damage: (11, 15),
                health: 60,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Thunderbird => Stats {
                level: 5,
                attack: 13,
                defence: 11,
                damage: (11, 15),
                health: 60,
                speed: 11,
                ammo_capacity: 0,
            },
            Self::Cyclops => Stats {
                level: 6,
                attack: 15,
                defence: 12,
                damage: (16, 20),
                health: 70,
                speed: 6,
                ammo_capacity: 16,
            },
            Self::CyclopsKing => Stats {
                level: 6,
                attack: 17,
                defence: 13,
                damage: (16, 20),
                health: 70,
                speed: 8,
                ammo_capacity: 24,
            },
            Self::Behemoth => Stats {
                level: 7,
                attack: 17,
                defence: 17,
                damage: (30, 50),
                health: 160,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::AncientBehemoth => Stats {
                level: 7,
                attack: 19,
                defence: 19,
                damage: (30, 50),
                health: 300,
                speed: 9,
                ammo_capacity: 0,
            },
            // Fortress
            Self::Gnoll => Stats {
                level: 1,
                attack: 3,
                defence: 5,
                damage: (2, 3),
                health: 6,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::GnollMarauder => Stats {
                level: 1,
                attack: 4,
                defence: 6,
                damage: (2, 3),
                health: 6,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Lizardman => Stats {
                level: 2,
                attack: 5,
                defence: 6,
                damage: (2, 3),
                health: 14,
                speed: 4,
                ammo_capacity: 12,
            },
            Self::LizardWarrior => Stats {
                level: 2,
                attack: 6,
                defence: 8,
                damage: (2, 5),
                health: 15,
                speed: 5,
                ammo_capacity: 24,
            },
            Self::SerpentFly => Stats {
                level: 3,
                attack: 7,
                defence: 9,
                damage: (2, 5),
                health: 20,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::DragonFly => Stats {
                level: 3,
                attack: 8,
                defence: 10,
                damage: (2, 5),
                health: 20,
                speed: 13,
                ammo_capacity: 0,
            },
            Self::Basilisk => Stats {
                level: 4,
                attack: 11,
                defence: 11,
                damage: (6, 10),
                health: 35,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::GreaterBasilisk => Stats {
                level: 4,
                attack: 12,
                defence: 12,
                damage: (6, 10),
                health: 40,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Gorgon => Stats {
                level: 5,
                attack: 10,
                defence: 14,
                damage: (12, 16),
                health: 70,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::MightyGorgon => Stats {
                level: 5,
                attack: 11,
                defence: 16,
                damage: (12, 16),
                health: 70,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::Wyvern => Stats {
                level: 6,
                attack: 14,
                defence: 14,
                damage: (14, 18),
                health: 70,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::WyvernMonarch => Stats {
                level: 6,
                attack: 14,
                defence: 14,
                damage: (18, 22),
                health: 70,
                speed: 11,
                ammo_capacity: 0,
            },
            Self::Hydra => Stats {
                level: 7,
                attack: 16,
                defence: 18,
                damage: (25, 45),
                health: 175,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::ChaosHydra => Stats {
                level: 7,
                attack: 18,
                defence: 20,
                damage: (25, 45),
                health: 250,
                speed: 7,
                ammo_capacity: 0,
            },
            // Conflux
            Self::Pixie => Stats {
                level: 1,
                attack: 2,
                defence: 2,
                damage: (1, 2),
                health: 3,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Sprite => Stats {
                level: 1,
                attack: 2,
                defence: 2,
                damage: (1, 3),
                health: 3,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::AirElemental => Stats {
                level: 2,
                attack: 9,
                defence: 9,
                damage: (2, 8),
                health: 25,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::StormElemental => Stats {
                level: 2,
                attack: 9,
                defence: 9,
                damage: (2, 8),
                health: 25,
                speed: 8,
                ammo_capacity: 24,
            },
            Self::WaterElemental => Stats {
                level: 3,
                attack: 8,
                defence: 10,
                damage: (3, 7),
                health: 30,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::IceElemental => Stats {
                level: 3,
                attack: 8,
                defence: 10,
                damage: (3, 7),
                health: 30,
                speed: 6,
                ammo_capacity: 24,
            },
            Self::FireElemental => Stats {
                level: 4,
                attack: 10,
                defence: 8,
                damage: (4, 6),
                health: 35,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::EnergyElemental => Stats {
                level: 4,
                attack: 12,
                defence: 8,
                damage: (4, 6),
                health: 35,
                speed: 8,
                ammo_capacity: 0,
            },
            Self::EarthElemental => Stats {
                level: 5,
                attack: 10,
                defence: 10,
                damage: (4, 8),
                health: 40,
                speed: 4,
                ammo_capacity: 0,
            },
            Self::MagmaElemental => Stats {
                level: 5,
                attack: 11,
                defence: 11,
                damage: (6, 10),
                health: 40,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::PsychicElemental => Stats {
                level: 6,
                attack: 15,
                defence: 13,
                damage: (10, 20),
                health: 75,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::MagicElemental => Stats {
                level: 6,
                attack: 15,
                defence: 13,
                damage: (15, 25),
                health: 80,
                speed: 9,
                ammo_capacity: 0,
            },
            Self::Firebird => Stats {
                level: 7,
                attack: 18,
                defence: 18,
                damage: (30, 40),
                health: 150,
                speed: 15,
                ammo_capacity: 0,
            },
            Self::Phoenix => Stats {
                level: 7,
                attack: 21,
                defence: 18,
                damage: (30, 40),
                health: 200,
                speed: 21,
                ammo_capacity: 0,
            },
            // Neutral
            Self::Peasant => Stats {
                level: 1,
                attack: 1,
                defence: 1,
                damage: (1, 1),
                health: 1,
                speed: 3,
                ammo_capacity: 0,
            },
            Self::Halfling => Stats {
                level: 1,
                attack: 4,
                defence: 2,
                damage: (1, 3),
                health: 4,
                speed: 5,
                ammo_capacity: 24,
            },
            Self::Boar => Stats {
                level: 2,
                attack: 6,
                defence: 5,
                damage: (2, 3),
                health: 15,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::Rogue => Stats {
                level: 2,
                attack: 8,
                defence: 3,
                damage: (2, 4),
                health: 10,
                speed: 6,
                ammo_capacity: 0,
            },
            Self::Mummy => Stats {
                level: 3,
                attack: 7,
                defence: 7,
                damage: (3, 5),
                health: 30,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Nomad => Stats {
                level: 3,
                attack: 9,
                defence: 8,
                damage: (2, 6),
                health: 30,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::Sharpshooter => Stats {
                level: 4,
                attack: 12,
                defence: 10,
                damage: (8, 10),
                health: 15,
                speed: 9,
                ammo_capacity: 32,
            },
            Self::Troll => Stats {
                level: 5,
                attack: 14,
                defence: 7,
                damage: (10, 15),
                health: 40,
                speed: 7,
                ammo_capacity: 0,
            },
            Self::GoldGolem => Stats {
                level: 5,
                attack: 11,
                defence: 12,
                damage: (8, 10),
                health: 50,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::DiamondGolem => Stats {
                level: 6,
                attack: 13,
                defence: 12,
                damage: (10, 14),
                health: 60,
                speed: 5,
                ammo_capacity: 0,
            },
            Self::Enchanter => Stats {
                level: 6,
                attack: 17,
                defence: 12,
                damage: (14, 14),
                health: 30,
                speed: 9,
                ammo_capacity: 32,
            },
            Self::FaerieDragon => Stats {
                level: 7,
                attack: 20,
                defence: 20,
                damage: (20, 30),
                health: 500,
                speed: 15,
                ammo_capacity: 0,
            },
            Self::RustDragon => Stats {
                level: 7,
                attack: 30,
                defence: 30,
                damage: (50, 50),
                health: 750,
                speed: 17,
                ammo_capacity: 0,
            },
            Self::CrystalDragon => Stats {
                level: 7,
                attack: 40,
                defence: 40,
                damage: (60, 75),
                health: 800,
                speed: 16,
                ammo_capacity: 0,
            },
            Self::AzureDragon => Stats {
                level: 7,
                attack: 50,
                defence: 50,
                damage: (70, 80),
                health: 1000,
                speed: 19,
                ammo_capacity: 0,
            },
            // War Machines
            Self::Ballista => Stats {
                level: 1,
                attack: 10,
                defence: 10,
                damage: (2, 3),
                health: 250,
                speed: 0,
                ammo_capacity: 0,
            },
            Self::FirstAidTent => Stats {
                level: 1,
                attack: 0,
                defence: 0,
                damage: (0, 0),
                health: 75,
                speed: 0,
                ammo_capacity: 0,
            },
            Self::Catapult => Stats {
                level: 1,
                attack: 10,
                defence: 10,
                damage: (0, 0),
                health: 1000,
                speed: 0,
                ammo_capacity: 0,
            },
            Self::AmmoCart => Stats {
                level: 1,
                attack: 0,
                defence: 5,
                damage: (0, 0),
                health: 100,
                speed: 0,
                ammo_capacity: 0,
            },
        }
    }

    pub fn has_ability(self, ability: Ability) -> bool {
        use std::mem::discriminant;

        self.abilities()
            .into_iter()
            .any(|a| discriminant(&ability) == discriminant(&a))
    }

    pub fn abilities(self) -> Vec<Ability> {
        let angels = Box::new([Creature::Angel, Creature::Archangel]);
        let devils = Box::new([Creature::Devil, Creature::ArchDevil]);
        let genies = Box::new([Creature::Genie, Creature::MasterGenie]);
        let efreets = Box::new([Creature::Efreeti, Creature::EfreetSultan]);

        match self {
            Self::Marksman => vec![Ability::DoubleShot],
            Self::Griffin => vec![Ability::ExtraRetaliation],
            Self::RoyalGriffin => vec![Ability::InfiniteRetaliations],
            Self::Crusader => vec![Ability::DoubleStrike],
            Self::Angel => vec![Ability::Hatred { to: devils }],
            Self::Archangel => vec![Ability::Hatred { to: devils }],

            Self::Genie => vec![Ability::Hatred { to: efreets }],
            Self::MasterGenie => vec![Ability::Hatred { to: efreets }],
            Self::Naga => vec![Ability::NoRetaliation],
            Self::NagaQueen => vec![Ability::NoRetaliation],
            Self::Titan => vec![Ability::Hatred {
                to: Box::new([Creature::BlackDragon]),
            }],

            Self::Harpy => vec![Ability::NoRetaliation],
            Self::HarpyHag => vec![Ability::NoRetaliation, Ability::ReturnAfterStrike],

            Self::Cerberus => vec![Ability::NoRetaliation],
            Self::Efreeti => vec![Ability::Hatred { to: genies }],
            Self::EfreetSultan => vec![Ability::Hatred { to: genies }],
            Self::Devil => vec![Ability::NoRetaliation, Ability::Hatred { to: angels }],
            Self::ArchDevil => vec![Ability::NoRetaliation, Ability::Hatred { to: angels }],

            Self::Vampire => vec![Ability::NoRetaliation],
            Self::VampireLord => vec![Ability::NoRetaliation],

            Self::WolfRaider => vec![Ability::DoubleStrike],
            Self::Behemoth => vec![Ability::IgnoreDefence { percent: 0.4 }],
            Self::AncientBehemoth => vec![Ability::IgnoreDefence { percent: 0.8 }],

            Self::Hydra => vec![Ability::NoRetaliation],
            Self::ChaosHydra => vec![Ability::NoRetaliation],

            Self::Sprite => vec![Ability::NoRetaliation],
            Self::PsychicElemental => vec![Ability::NoRetaliation],
            Self::MagicElemental => vec![Ability::NoRetaliation],

            _ => vec![],
        }
    }

    pub fn is_wide(&self) -> bool {
        [
            // Castle
            Self::Griffin,
            Self::RoyalGriffin,
            Self::Cavalier,
            Self::Champion,
            Self::Archangel,
            // Rampart
            Self::Centaur,
            Self::CentaurCaptain,
            Self::Pegasus,
            Self::SilverPegasus,
            Self::Unicorn,
            Self::WarUnicorn,
            Self::GreenDragon,
            Self::GoldDragon,
            // Tower
            Self::Naga,
            Self::NagaQueen,
            // Inferno
            Self::HellHound,
            Self::Cerberus,
            // Necropolis
            Self::BlackKnight,
            Self::DreadKnight,
            Self::BoneDragon,
            Self::GhostDragon,
            // Dungeon
            Self::Medusa,
            Self::MedusaQueen,
            Self::Manticore,
            Self::Scorpicore,
            Self::RedDragon,
            Self::BlackDragon,
            // Stronghold
            Self::WolfRider,
            Self::WolfRaider,
            Self::Roc,
            Self::Thunderbird,
            Self::Behemoth,
            Self::AncientBehemoth,
            // Fortress
            Self::Basilisk,
            Self::GreaterBasilisk,
            Self::Gorgon,
            Self::MightyGorgon,
            Self::Wyvern,
            Self::WyvernMonarch,
            Self::Hydra,
            Self::ChaosHydra,
            // Conflux
            Self::WaterElemental,
            Self::IceElemental,
            Self::Firebird,
            Self::Phoenix,
            // Neutral
            Self::Boar,
            Self::Nomad,
            Self::FaerieDragon,
            Self::RustDragon,
            Self::CrystalDragon,
            Self::AzureDragon,
            // War Machines
            Self::Ballista,
            Self::Catapult,
        ]
        .contains(self)
    }

    pub const fn movement_type(self) -> MovementType {
        match self {
            Self::Pikeman => MovementType::Walk,
            Self::Halberdier => MovementType::Walk,
            Self::Archer => MovementType::Walk,
            Self::Marksman => MovementType::Walk,
            Self::Griffin => MovementType::Fly,
            Self::RoyalGriffin => MovementType::Fly,
            Self::Swordsman => MovementType::Walk,
            Self::Crusader => MovementType::Walk,
            Self::Monk => MovementType::Walk,
            Self::Zealot => MovementType::Walk,
            Self::Cavalier => MovementType::Walk,
            Self::Champion => MovementType::Walk,
            Self::Angel => MovementType::Fly,
            Self::Archangel => MovementType::Fly,

            Self::Centaur => MovementType::Walk,
            Self::CentaurCaptain => MovementType::Walk,
            Self::Dwarf => MovementType::Walk,
            Self::BattleDwarf => MovementType::Walk,
            Self::WoodElf => MovementType::Walk,
            Self::GrandElf => MovementType::Walk,
            Self::Pegasus => MovementType::Fly,
            Self::SilverPegasus => MovementType::Fly,
            Self::DendroidGuard => MovementType::Walk,
            Self::DendroidSoldier => MovementType::Walk,
            Self::Unicorn => MovementType::Walk,
            Self::WarUnicorn => MovementType::Walk,
            Self::GreenDragon => MovementType::Fly,
            Self::GoldDragon => MovementType::Fly,

            Self::Gremlin => MovementType::Walk,
            Self::MasterGremlin => MovementType::Walk,
            Self::StoneGargoyle => MovementType::Fly,
            Self::ObsidianGargoyle => MovementType::Fly,
            Self::StoneGolem => MovementType::Walk,
            Self::IronGolem => MovementType::Walk,
            Self::Mage => MovementType::Walk,
            Self::ArchMage => MovementType::Walk,
            Self::Genie => MovementType::Fly,
            Self::MasterGenie => MovementType::Fly,
            Self::Naga => MovementType::Walk,
            Self::NagaQueen => MovementType::Walk,
            Self::Giant => MovementType::Walk,
            Self::Titan => MovementType::Walk,

            Self::Imp => MovementType::Walk,
            Self::Familiar => MovementType::Walk,
            Self::Gog => MovementType::Walk,
            Self::Magog => MovementType::Walk,
            Self::HellHound => MovementType::Walk,
            Self::Cerberus => MovementType::Walk,
            Self::Demon => MovementType::Walk,
            Self::HornedDemon => MovementType::Walk,
            Self::PitFiend => MovementType::Walk,
            Self::PitLord => MovementType::Walk,
            Self::Efreeti => MovementType::Fly,
            Self::EfreetSultan => MovementType::Fly,
            Self::Devil => MovementType::Teleport,
            Self::ArchDevil => MovementType::Teleport,

            Self::Skeleton => MovementType::Walk,
            Self::SkeletonWarrior => MovementType::Walk,
            Self::WalkingDead => MovementType::Walk,
            Self::Zombie => MovementType::Walk,
            Self::Wight => MovementType::Fly,
            Self::Wraith => MovementType::Fly,
            Self::Vampire => MovementType::Fly,
            Self::VampireLord => MovementType::Fly,
            Self::Lich => MovementType::Walk,
            Self::PowerLich => MovementType::Walk,
            Self::BlackKnight => MovementType::Walk,
            Self::DreadKnight => MovementType::Walk,
            Self::BoneDragon => MovementType::Fly,
            Self::GhostDragon => MovementType::Fly,

            Self::Troglodyte => MovementType::Walk,
            Self::InfernalTroglodyte => MovementType::Walk,
            Self::Harpy => MovementType::Fly,
            Self::HarpyHag => MovementType::Fly,
            Self::Beholder => MovementType::Walk,
            Self::EvilEye => MovementType::Walk,
            Self::Medusa => MovementType::Walk,
            Self::MedusaQueen => MovementType::Walk,
            Self::Minotaur => MovementType::Walk,
            Self::MinotaurKing => MovementType::Walk,
            Self::Manticore => MovementType::Fly,
            Self::Scorpicore => MovementType::Fly,
            Self::RedDragon => MovementType::Fly,
            Self::BlackDragon => MovementType::Fly,

            Self::Goblin => MovementType::Walk,
            Self::Hobgoblin => MovementType::Walk,
            Self::WolfRider => MovementType::Walk,
            Self::WolfRaider => MovementType::Walk,
            Self::Orc => MovementType::Walk,
            Self::OrcChieftain => MovementType::Walk,
            Self::Ogre => MovementType::Walk,
            Self::OgreMagi => MovementType::Walk,
            Self::Roc => MovementType::Fly,
            Self::Thunderbird => MovementType::Fly,
            Self::Cyclops => MovementType::Walk,
            Self::CyclopsKing => MovementType::Walk,
            Self::Behemoth => MovementType::Walk,
            Self::AncientBehemoth => MovementType::Walk,

            Self::Gnoll => MovementType::Walk,
            Self::GnollMarauder => MovementType::Walk,
            Self::Lizardman => MovementType::Walk,
            Self::LizardWarrior => MovementType::Walk,
            Self::SerpentFly => MovementType::Fly,
            Self::DragonFly => MovementType::Fly,
            Self::Basilisk => MovementType::Walk,
            Self::GreaterBasilisk => MovementType::Walk,
            Self::Gorgon => MovementType::Walk,
            Self::MightyGorgon => MovementType::Walk,
            Self::Wyvern => MovementType::Fly,
            Self::WyvernMonarch => MovementType::Fly,
            Self::Hydra => MovementType::Walk,
            Self::ChaosHydra => MovementType::Walk,

            Self::Pixie => MovementType::Fly,
            Self::Sprite => MovementType::Fly,
            Self::AirElemental => MovementType::Walk,
            Self::StormElemental => MovementType::Walk,
            Self::WaterElemental => MovementType::Walk,
            Self::IceElemental => MovementType::Walk,
            Self::FireElemental => MovementType::Walk,
            Self::EnergyElemental => MovementType::Fly,
            Self::EarthElemental => MovementType::Walk,
            Self::MagmaElemental => MovementType::Walk,
            Self::PsychicElemental => MovementType::Walk,
            Self::MagicElemental => MovementType::Walk,
            Self::Firebird => MovementType::Fly,
            Self::Phoenix => MovementType::Fly,

            Self::Peasant => MovementType::Walk,
            Self::Halfling => MovementType::Walk,
            Self::Boar => MovementType::Walk,
            Self::Rogue => MovementType::Walk,
            Self::Mummy => MovementType::Walk,
            Self::Nomad => MovementType::Walk,
            Self::Sharpshooter => MovementType::Walk,
            Self::Troll => MovementType::Walk,
            Self::GoldGolem => MovementType::Walk,
            Self::DiamondGolem => MovementType::Walk,
            Self::Enchanter => MovementType::Walk,
            Self::FaerieDragon => MovementType::Fly,
            Self::RustDragon => MovementType::Fly,
            Self::CrystalDragon => MovementType::Walk,
            Self::AzureDragon => MovementType::Fly,

            Self::Ballista => unreachable!(),
            Self::FirstAidTent => unreachable!(),
            Self::Catapult => unreachable!(),
            Self::AmmoCart => unreachable!(),
        }
    }

    pub fn is_flying(self) -> bool {
        [MovementType::Fly, MovementType::Teleport].contains(&self.movement_type())
    }

    pub const fn spritesheet_filename(self) -> &'static str {
        match self {
            // Castle
            Self::Pikeman => "CPKMAN.def",
            Self::Halberdier => "chalbd.def",
            Self::Archer => "CLCBOW.def",
            Self::Marksman => "CHCBOW.def",
            Self::Griffin => "CGRIFF.def",
            Self::RoyalGriffin => "Crgrif.def",
            Self::Swordsman => "Csword.def",
            Self::Crusader => "Ccrusd.def",
            Self::Monk => "Cmonkk.def",
            Self::Zealot => "Czealt.def",
            Self::Cavalier => "CCAVLR.def",
            Self::Champion => "CCHAMP.def",
            Self::Angel => "cangel.def",
            Self::Archangel => "CRANGL.def",
            // Rampart
            Self::Centaur => "CCENTR.def",
            Self::CentaurCaptain => "CECENT.def",
            Self::Dwarf => "CDWARF.def",
            Self::BattleDwarf => "CBDWAR.def",
            Self::WoodElf => "CELF.def",
            Self::GrandElf => "CGRELF.def",
            Self::Pegasus => "CPEGAS.def",
            Self::SilverPegasus => "CAPEGS.def",
            Self::DendroidGuard => "CTREE.def",
            Self::DendroidSoldier => "CBTREE.def",
            Self::Unicorn => "CUNICO.def",
            Self::WarUnicorn => "CWUNIC.def",
            Self::GreenDragon => "CGDRAG.def",
            Self::GoldDragon => "CDDRAG.def",
            // Tower
            Self::Gremlin => "CGREMA.def",
            Self::MasterGremlin => "CGREMM.def",
            Self::StoneGargoyle => "CGARGO.def",
            Self::ObsidianGargoyle => "COGARG.def",
            Self::StoneGolem => "CSGOLE.def",
            Self::IronGolem => "CIGOLE.def",
            Self::Mage => "CMAGE.def",
            Self::ArchMage => "CAMAGE.def",
            Self::Genie => "CGENIE.def",
            Self::MasterGenie => "CSULTA.def",
            Self::Naga => "CNAGA.def",
            Self::NagaQueen => "CNAGAG.def",
            Self::Giant => "CLTITA.def",
            Self::Titan => "CGTITA.def",
            // Stronghold
            Self::Goblin => "CGOBLI.def",
            Self::Hobgoblin => "CHGOBL.def",
            Self::WolfRider => "CBWLFR.def",
            Self::WolfRaider => "CUWLFR.def",
            Self::Orc => "CORC.def",
            Self::OrcChieftain => "CORCCH.def",
            Self::Ogre => "COGRE.def",
            Self::OgreMagi => "COGMAG.def",
            Self::Roc => "CROC.def",
            Self::Thunderbird => "CTBIRD.def",
            Self::Cyclops => "CCYCLR.def",
            Self::CyclopsKing => "CcyclLor.def",
            Self::Behemoth => "CYBEHE.def",
            Self::AncientBehemoth => "CABEHE.def",
            // Fortress
            Self::Gnoll => "CGNOLL.def",
            Self::GnollMarauder => "CGNOLM.def",
            Self::Lizardman => "CPLIZA.def",
            Self::LizardWarrior => "CALIZA.def",
            Self::SerpentFly => "CDRFLY.def",
            Self::DragonFly => "CDRFIR.def",
            Self::Basilisk => "CBASIL.def",
            Self::GreaterBasilisk => "CGBASI.def",
            Self::Gorgon => "Ccgorg.def",
            Self::MightyGorgon => "Cbgog.def",
            Self::Wyvern => "CWYVER.def",
            Self::WyvernMonarch => "CWYVMN.def",
            Self::Hydra => "CHYDRA.def",
            Self::ChaosHydra => "cchydr.def",
            // Inferno
            Self::Imp => "CIMP.def",
            Self::Familiar => "CFAMIL.def",
            Self::Gog => "CGOG.def",
            Self::Magog => "CMAGOG.def",
            Self::HellHound => "CHHOUN.def",
            Self::Cerberus => "CCERBU.def",
            Self::Demon => "COHDEM.def",
            Self::HornedDemon => "CTHDEM.def",
            Self::PitFiend => "CPFIEN.def",
            Self::PitLord => "CPFOE.def",
            Self::Efreeti => "cefree.def",
            Self::EfreetSultan => "cefres.def",
            Self::Devil => "CDEVIL.def",
            Self::ArchDevil => "CADEVL.def",
            // Necropolis
            Self::Skeleton => "CSKELE.def",
            Self::SkeletonWarrior => "CWSKEL.def",
            Self::WalkingDead => "CZOMBI.def",
            Self::Zombie => "CZOMLO.def",
            Self::Wight => "CWIGHT.def",
            Self::Wraith => "CWRAIT.def",
            Self::Vampire => "CVAMP.def",
            Self::VampireLord => "CNOSFE.def",
            Self::Lich => "CLICH.def",
            Self::PowerLich => "CPLICH.def",
            Self::BlackKnight => "CBKNIG.def",
            Self::DreadKnight => "CBLORD.def",
            Self::BoneDragon => "CNDRGN.def",
            Self::GhostDragon => "CHDRGN.def",
            // Dungeon
            Self::Troglodyte => "Ctrogl.def",
            Self::InfernalTroglodyte => "Citrog.def",
            Self::Harpy => "CHARPY.def",
            Self::HarpyHag => "CHARPH.def",
            Self::Beholder => "cbehol.def",
            Self::EvilEye => "Ceveye.def",
            Self::Medusa => "Cmedus.def",
            Self::MedusaQueen => "Cmeduq.def",
            Self::Minotaur => "CMINOT.def",
            Self::MinotaurKing => "Cminok.def",
            Self::Manticore => "CMCORE.def",
            Self::Scorpicore => "CCMCOR.def",
            Self::RedDragon => "CRDRGN.def",
            Self::BlackDragon => "CBDRGN.def",
            // Conflux
            Self::Pixie => "Cpixie.def",
            Self::Sprite => "CSprite.def",
            Self::AirElemental => "CAELEM.def",
            Self::StormElemental => "Cstorm.def",
            Self::WaterElemental => "CWELEM.def",
            Self::IceElemental => "Cicee.def",
            Self::FireElemental => "CFELEM.def",
            Self::EnergyElemental => "Cnrg.def",
            Self::EarthElemental => "CEELEM.def",
            Self::MagmaElemental => "Cstone.def",
            Self::PsychicElemental => "Cpsyel.def",
            Self::MagicElemental => "Cmagel.def",
            Self::Firebird => "Cfbird.DEF",
            Self::Phoenix => "Cphx.def",
            // Neutral
            Self::Peasant => "Cpeas.def",
            Self::Halfling => "CHalf.def",
            Self::Boar => "Cboar.def",
            Self::Rogue => "Crogue.def",
            Self::Mummy => "Cmummy.def",
            Self::Nomad => "Cnomad.def",
            Self::Sharpshooter => "Csharp.def",
            Self::Troll => "Ctroll.def",
            Self::GoldGolem => "CGGOLE.def",
            Self::DiamondGolem => "CDGOLE.def",
            Self::Enchanter => "Cench.def",
            Self::FaerieDragon => "Cfdrgn.def",
            Self::RustDragon => "CRsDgn.def",
            Self::CrystalDragon => "Ccdrgn.def",
            Self::AzureDragon => "CaDrgn.def",
            // War Machines
            Self::Ballista => "smbal.def",
            Self::FirstAidTent => "SMtent.def",
            Self::Catapult => "SMCata.def",
            Self::AmmoCart => "SMCart.def",
        }
    }

    pub const fn walk_animation_modifier(self) -> f32 {
        match self {
            Self::Pikeman => 1.15,
            Self::Halberdier => 0.90,
            Self::Archer => 1.00,
            Self::Marksman => 1.00,
            Self::Griffin => 1.00,
            Self::RoyalGriffin => 1.05,
            Self::Swordsman => 0.87,
            Self::Crusader => 0.95,
            Self::Monk => 1.00,
            Self::Zealot => 1.00,
            Self::Cavalier => 1.00,
            Self::Champion => 0.90,
            Self::Angel => 0.82,
            Self::Archangel => 0.82,

            Self::Centaur => 0.50,
            Self::CentaurCaptain => 0.50,
            Self::Dwarf => 0.98,
            Self::BattleDwarf => 0.97,
            Self::WoodElf => 1.02,
            Self::GrandElf => 1.02,
            Self::Pegasus => 0.72,
            Self::SilverPegasus => 0.72,
            Self::DendroidGuard => 1.55,
            Self::DendroidSoldier => 1.55,
            Self::Unicorn => 1.20,
            Self::WarUnicorn => 1.20,
            Self::GreenDragon => 0.60,
            Self::GoldDragon => 0.60,

            Self::Gremlin => 1.00,
            Self::MasterGremlin => 0.75,
            Self::StoneGargoyle => 0.70,
            Self::ObsidianGargoyle => 0.70,
            Self::IronGolem => 1.20,
            Self::StoneGolem => 1.45,
            Self::Mage => 1.00,
            Self::ArchMage => 1.00,
            Self::Genie => 1.00,
            Self::MasterGenie => 1.00,
            Self::Naga => 1.00,
            Self::NagaQueen => 1.00,
            Self::Giant => 1.38,
            Self::Titan => 1.38,

            Self::Imp => 1.25,
            Self::Familiar => 1.30,
            Self::Gog => 1.27,
            Self::Magog => 1.33,
            Self::HellHound => 1.00,
            Self::Cerberus => 1.00,
            Self::Demon => 0.93,
            Self::HornedDemon => 0.93,
            Self::PitFiend => 1.00,
            Self::PitLord => 1.00,
            Self::Efreeti => 1.00,
            Self::EfreetSultan => 1.00,
            Self::Devil => 1.00,
            Self::ArchDevil => 1.00,

            Self::Skeleton => 1.00,
            Self::SkeletonWarrior => 1.00,
            Self::WalkingDead => 1.30,
            Self::Zombie => 1.30,
            Self::Wight => 1.00,
            Self::Wraith => 1.00,
            Self::Vampire => 1.00,
            Self::VampireLord => 1.00,
            Self::Lich => 1.00,
            Self::PowerLich => 1.00,
            Self::BlackKnight => 1.00,
            Self::DreadKnight => 1.00,
            Self::BoneDragon => 0.75,
            Self::GhostDragon => 0.75,

            Self::Troglodyte => 0.80,
            Self::InfernalTroglodyte => 0.80,
            Self::Harpy => 0.85,
            Self::HarpyHag => 0.85,
            Self::Beholder => 1.00,
            Self::EvilEye => 1.00,
            Self::Medusa => 1.00,
            Self::MedusaQueen => 1.00,
            Self::Minotaur => 1.05,
            Self::MinotaurKing => 1.05,
            Self::Manticore => 0.80,
            Self::Scorpicore => 0.80,
            Self::RedDragon => 0.60,
            Self::BlackDragon => 0.60,

            Self::Goblin => 1.21,
            Self::Hobgoblin => 1.24,
            Self::WolfRider => 0.93,
            Self::WolfRaider => 0.93,
            Self::Orc => 1.00,
            Self::OrcChieftain => 1.00,
            Self::Ogre => 1.28,
            Self::OgreMagi => 1.28,
            Self::Roc => 1.00,
            Self::Thunderbird => 1.00,
            Self::Cyclops => 1.00,
            Self::CyclopsKing => 1.00,
            Self::Behemoth => 1.17,
            Self::AncientBehemoth => 1.17,

            Self::Gnoll => 1.00,
            Self::GnollMarauder => 1.00,
            Self::Lizardman => 0.90,
            Self::LizardWarrior => 0.90,
            Self::Gorgon => 1.00,
            Self::MightyGorgon => 1.00,
            Self::SerpentFly => 0.77,
            Self::DragonFly => 0.77,
            Self::Basilisk => 1.00,
            Self::GreaterBasilisk => 1.00,
            Self::Wyvern => 0.67,
            Self::WyvernMonarch => 0.67,
            Self::Hydra => 1.00,
            Self::ChaosHydra => 1.00,

            Self::AirElemental => 0.50,
            Self::EarthElemental => 1.00,
            Self::FireElemental => 0.50,
            Self::WaterElemental => 0.87,
            Self::GoldGolem => 1.20,
            Self::DiamondGolem => 1.27,
            Self::Pixie => 1.00,
            Self::Sprite => 1.00,
            Self::PsychicElemental => 1.00,
            Self::MagicElemental => 1.00,
            Self::IceElemental => 1.00,
            Self::MagmaElemental => 0.77,
            Self::StormElemental => 1.33,
            Self::EnergyElemental => 0.67,
            Self::Firebird => 1.00,
            Self::Phoenix => 1.00,

            Self::AzureDragon => 0.60,
            Self::CrystalDragon => 0.60,
            Self::FaerieDragon => 0.60,
            Self::RustDragon => 0.60,
            Self::Enchanter => 1.00,
            Self::Sharpshooter => 1.02,
            Self::Halfling => 1.00,
            Self::Peasant => 1.00,
            Self::Boar => 1.00,
            Self::Mummy => 1.00,
            Self::Nomad => 1.00,
            Self::Rogue => 1.00,
            Self::Troll => 1.00,

            Self::Catapult | Self::Ballista | Self::FirstAidTent | Self::AmmoCart => unreachable!(),
        }
    }

    pub const fn sounds(&self) -> Sounds {
        match self {
            Self::Angel => Sounds([
                Some("ANGLATTK"),
                Some("ANGLDFND"),
                None,
                Some("ANGLMOVE"),
                None,
                None,
                Some("ANGLWNCE"),
                Some("ANGLKILL"),
            ]),
            Self::Archangel => Sounds([
                Some("AAGLATTK"),
                Some("AAGLDFND"),
                None,
                Some("AAGLMOVE"),
                None,
                None,
                Some("AAGLWNCE"),
                Some("AAGLKILL"),
            ]),
            Self::Archer => Sounds([
                Some("LCRSATTK"),
                Some("LCRSDFND"),
                None,
                Some("LCRSMOVE"),
                None,
                Some("LCRSSHOT"),
                Some("LCRSWNCE"),
                Some("LCRSKILL"),
            ]),
            Self::Cavalier => Sounds([
                Some("CAVAATTK"),
                Some("CAVADFND"),
                None,
                Some("CAVAMOVE"),
                None,
                None,
                Some("CAVAWNCE"),
                Some("CAVAKILL"),
            ]),
            Self::Champion => Sounds([
                Some("CHMPATTK"),
                Some("CHMPDFND"),
                None,
                Some("CHMPMOVE"),
                None,
                None,
                Some("CHMPWNCE"),
                Some("CHMPKILL"),
            ]),
            Self::Crusader => Sounds([
                Some("CRUSATTK"),
                Some("CRUSDFND"),
                None,
                Some("CRUSMOVE"),
                None,
                None,
                Some("CRUSWNCE"),
                Some("CRUSKILL"),
            ]),
            Self::Griffin => Sounds([
                Some("GRIFATTK"),
                Some("GRIFDFND"),
                None,
                Some("GRIFMOVE"),
                None,
                None,
                Some("GRIFWNCE"),
                Some("GRIFKILL"),
            ]),
            Self::Halberdier => Sounds([
                Some("HALBATTK"),
                Some("HALBDFND"),
                None,
                Some("HALBMOVE"),
                None,
                None,
                Some("HALBWNCE"),
                Some("HALBKILL"),
            ]),
            Self::Marksman => Sounds([
                Some("HCRSATTK"),
                Some("HCRSDFND"),
                None,
                Some("HCRSMOVE"),
                None,
                Some("HCRSSHOT"),
                Some("HCRSWNCE"),
                Some("HCRSKILL"),
            ]),
            Self::Monk => Sounds([
                Some("MONKATTK"),
                Some("MONKDFND"),
                None,
                Some("MONKMOVE"),
                None,
                Some("MONKSHOT"),
                Some("MONKWNCE"),
                Some("MONKKILL"),
            ]),
            Self::Pikeman => Sounds([
                Some("PIKEATTK"),
                Some("PIKEDFND"),
                None,
                Some("PIKEMOVE"),
                None,
                None,
                Some("PIKEWNCE"),
                Some("PIKEKILL"),
            ]),
            Self::RoyalGriffin => Sounds([
                Some("RGRFATTK"),
                Some("RGRFDFND"),
                None,
                Some("RGRFMOVE"),
                None,
                None,
                Some("RGRFWNCE"),
                Some("RGRFKILL"),
            ]),
            Self::Swordsman => Sounds([
                Some("SWRDATTK"),
                Some("SWRDDFND"),
                None,
                Some("SWRDMOVE"),
                None,
                None,
                Some("SWRDWNCE"),
                Some("SWRDKILL"),
            ]),
            Self::Zealot => Sounds([
                Some("ZELTATTK"),
                Some("ZELTDFND"),
                None,
                Some("ZELTMOVE"),
                None,
                Some("ZELTSHOT"),
                Some("ZELTWNCE"),
                Some("ZELTKILL"),
            ]),

            Self::AmmoCart => Sounds([
                None,
                None,
                None,
                None,
                None,
                None,
                Some("CARTWNCE"),
                Some("CARTKILL"),
            ]),
            Self::Ballista => Sounds([
                None,
                None,
                None,
                None,
                None,
                Some("BALLSHOT"),
                Some("BALLWNCE"),
                Some("BALLKILL"),
            ]),
            Self::Catapult => Sounds([
                None,
                None,
                None,
                None,
                None,
                Some("CATASHOT"),
                Some("CATAWNCE"),
                Some("CATAKILL"),
            ]),
            Self::FirstAidTent => Sounds([
                None,
                None,
                None,
                None,
                None,
                None,
                Some("FAIDWNCE"),
                Some("FAIDKILL"),
            ]),

            Self::ArchMage => Sounds([
                Some("AMAGATTK"),
                Some("AMAGDFND"),
                None,
                Some("AMAGMOVE"),
                None,
                Some("AMAGSHOT"),
                Some("AMAGWNCE"),
                Some("AMAGKILL"),
            ]),
            Self::Genie => Sounds([
                Some("GENIATTK"),
                Some("GENIDFND"),
                None,
                Some("GENIMOVE"),
                None,
                None,
                Some("GENIWNCE"),
                Some("GENIKILL"),
            ]),
            Self::Giant => Sounds([
                Some("LTITATTK"),
                Some("LTITDFND"),
                None,
                Some("LTITMOVE"),
                None,
                None,
                Some("LTITWNCE"),
                Some("LTITKILL"),
            ]),
            Self::Gremlin => Sounds([
                Some("AGRMATTK"),
                Some("AGRMDFND"),
                None,
                Some("AGRMMOVE"),
                None,
                Some("AGRMSHOT"),
                Some("AGRMWNCE"),
                Some("AGRMKILL"),
            ]),
            Self::IronGolem => Sounds([
                Some("SGLMATTK"),
                Some("SGLMDFND"),
                None,
                Some("SGLMMOVE"),
                None,
                None,
                Some("SGLMWNCE"),
                Some("SGLMKILL"),
            ]),
            Self::Mage => Sounds([
                Some("MAGEATTK"),
                Some("MAGEDFND"),
                None,
                Some("MAGEMOVE"),
                None,
                Some("MAGESHOT"),
                Some("MAGEWNCE"),
                Some("MAGEKILL"),
            ]),
            Self::MasterGenie => Sounds([
                Some("CALFATTK"),
                Some("CALFDFND"),
                None,
                Some("CALFMOVE"),
                None,
                Some("CALFSHOT"),
                Some("CALFWNCE"),
                Some("CALFKILL"),
            ]),
            Self::MasterGremlin => Sounds([
                Some("MGRMATTK"),
                Some("MGRMDFND"),
                None,
                Some("MGRMMOVE"),
                None,
                Some("MGRMSHOT"),
                Some("MGRMWNCE"),
                Some("MGRMKILL"),
            ]),
            Self::Naga => Sounds([
                Some("NSENATTK"),
                Some("NSENDFND"),
                None,
                Some("NSENMOVE"),
                None,
                None,
                Some("NSENWNCE"),
                Some("NSENKILL"),
            ]),
            Self::NagaQueen => Sounds([
                Some("NGRDATTK"),
                Some("NGRDDFND"),
                None,
                Some("NGRDMOVE"),
                None,
                None,
                Some("NGRDWNCE"),
                Some("NGRDKILL"),
            ]),
            Self::ObsidianGargoyle => Sounds([
                Some("OGRGATTK"),
                Some("OGRGDFND"),
                None,
                Some("OGRGMOVE"),
                None,
                None,
                Some("OGRGWNCE"),
                Some("OGRGKILL"),
            ]),
            Self::StoneGargoyle => Sounds([
                Some("SGRGATTK"),
                Some("SGRGDFND"),
                None,
                Some("SGRGMOVE"),
                None,
                None,
                Some("SGRGWNCE"),
                Some("SGRGKILL"),
            ]),
            Self::StoneGolem => Sounds([
                Some("IGLMATTK"),
                Some("IGLMDFND"),
                None,
                Some("IGLMMOVE"),
                None,
                None,
                Some("IGLMWNCE"),
                Some("IGLMKILL"),
            ]),
            Self::Titan => Sounds([
                Some("GTITATTK"),
                Some("GTITDFND"),
                None,
                Some("GTITMOVE"),
                None,
                Some("GTITSHOT"),
                Some("GTITWNCE"),
                Some("GTITKILL"),
            ]),

            Self::AzureDragon => Sounds([
                Some("AZURATTK"),
                Some("AZURDFND"),
                None,
                Some("AZURMOVE"),
                None,
                None,
                Some("AZURWNCE"),
                Some("AZURKILL"),
            ]),
            Self::Boar => Sounds([
                Some("BOARATTK"),
                Some("BOARDFND"),
                None,
                Some("BOARMOVE"),
                None,
                None,
                Some("BOARWNCE"),
                Some("BOARKILL"),
            ]),
            Self::CrystalDragon => Sounds([
                Some("CRYSATTK"),
                Some("CRYSDFND"),
                None,
                Some("CRYSMOVE"),
                None,
                None,
                Some("CRYSWNCE"),
                Some("CRYSKILL"),
            ]),
            Self::DiamondGolem => Sounds([
                Some("DGLMATTK"),
                Some("DGLMDFND"),
                None,
                Some("DGLMMOVE"),
                None,
                None,
                Some("DGLMWNCE"),
                Some("DGLMKILL"),
            ]),
            Self::Enchanter => Sounds([
                Some("ENCHATTK"),
                Some("ENCHDFND"),
                None,
                Some("ENCHMOVE"),
                None,
                Some("ENCHSHOT"),
                Some("ENCHWNCE"),
                Some("ENCHKILL"),
            ]),
            Self::FaerieDragon => Sounds([
                Some("FAERATTK"),
                Some("FAERDFND"),
                None,
                Some("FAERMOVE"),
                None,
                Some("FAERSHOT"),
                Some("FAERWNCE"),
                Some("FAERKILL"),
            ]),
            Self::GoldGolem => Sounds([
                Some("GGLMATTK"),
                Some("GGLMDFND"),
                None,
                Some("GGLMMOVE"),
                None,
                None,
                Some("GGLMWNCE"),
                Some("GGLMKILL"),
            ]),
            Self::Halfling => Sounds([
                Some("HALFATTK"),
                Some("HALFDFND"),
                None,
                Some("HALFMOVE"),
                None,
                Some("HALFSHOT"),
                Some("HALFWNCE"),
                Some("HALFKILL"),
            ]),
            Self::Mummy => Sounds([
                Some("MUMYATTK"),
                Some("MUMYDFND"),
                None,
                Some("MUMYMOVE"),
                None,
                None,
                Some("MUMYWNCE"),
                Some("MUMYKILL"),
            ]),
            Self::Nomad => Sounds([
                Some("NMADATTK"),
                Some("NMADDFND"),
                None,
                Some("NMADMOVE"),
                None,
                None,
                Some("NMADWNCE"),
                Some("NMADKILL"),
            ]),
            Self::Peasant => Sounds([
                Some("PSNTATTK"),
                Some("PSNTDFND"),
                None,
                Some("PSNTMOVE"),
                None,
                None,
                Some("PSNTWNCE"),
                Some("PSNTKILL"),
            ]),
            Self::Rogue => Sounds([
                Some("ROGUATTK"),
                Some("ROGUDFND"),
                None,
                Some("ROGUMOVE"),
                None,
                None,
                Some("ROGUWNCE"),
                Some("ROGUKILL"),
            ]),
            Self::RustDragon => Sounds([
                Some("RUSTATTK"),
                Some("RUSTDFND"),
                None,
                Some("RUSTMOVE"),
                None,
                None,
                Some("RUSTWNCE"),
                Some("RUSTKILL"),
            ]),
            Self::Sharpshooter => Sounds([
                Some("HCRSATTK"),
                Some("HCRSDFND"),
                None,
                Some("HCRSMOVE"),
                None,
                Some("HCRSSHOT"),
                Some("HCRSWNCE"),
                Some("HCRSKILL"),
            ]),
            Self::Troll => Sounds([
                Some("TRLLATTK"),
                Some("TRLLDFND"),
                None,
                Some("TRLLMOVE"),
                None,
                None,
                Some("TRLLWNCE"),
                Some("TRLLKILL"),
            ]),

            Self::Basilisk => Sounds([
                Some("BASLATTK"),
                Some("BASLDFND"),
                None,
                Some("BASLMOVE"),
                None,
                None,
                Some("BASLWNCE"),
                Some("BASLKILL"),
            ]),
            Self::ChaosHydra => Sounds([
                Some("CHYDATTK"),
                Some("CHYDDFND"),
                None,
                Some("CHYDMOVE"),
                None,
                None,
                Some("CHYDWNCE"),
                Some("CHYDKILL"),
            ]),
            Self::DragonFly => Sounds([
                Some("FDFLATTK"),
                Some("FDFLDFND"),
                None,
                Some("FDFLMOVE"),
                None,
                Some("FDFLSHOT"),
                Some("FDFLWNCE"),
                Some("FDFLKILL"),
            ]),
            Self::Gnoll => Sounds([
                Some("GNOLATTK"),
                Some("GNOLDFND"),
                None,
                Some("GNOLMOVE"),
                None,
                None,
                Some("GNOLWNCE"),
                Some("GNOLKILL"),
            ]),
            Self::GnollMarauder => Sounds([
                Some("GNLMATTK"),
                Some("GNLMDFND"),
                None,
                Some("GNLMMOVE"),
                None,
                None,
                Some("GNLMWNCE"),
                Some("GNLMKILL"),
            ]),
            Self::Gorgon => Sounds([
                Some("CGORATTK"),
                Some("CGORDFND"),
                None,
                Some("CGORMOVE"),
                None,
                None,
                Some("CGORWNCE"),
                Some("CGORKILL"),
            ]),
            Self::GreaterBasilisk => Sounds([
                Some("GBASATTK"),
                Some("GBASDFND"),
                None,
                Some("GBASMOVE"),
                None,
                None,
                Some("GBASWNCE"),
                Some("GBASKILL"),
            ]),
            Self::Hydra => Sounds([
                Some("HYDRATTK"),
                Some("HYDRDFND"),
                None,
                Some("HYDRMOVE"),
                None,
                None,
                Some("HYDRWNCE"),
                Some("HYDRKILL"),
            ]),
            Self::LizardWarrior => Sounds([
                Some("ALIZATTK"),
                Some("ALIZDFND"),
                None,
                Some("ALIZMOVE"),
                None,
                Some("ALIZSHOT"),
                Some("ALIZWNCE"),
                Some("ALIZKILL"),
            ]),
            Self::Lizardman => Sounds([
                Some("PLIZATTK"),
                Some("PLIZDFND"),
                None,
                Some("PLIZMOVE"),
                None,
                Some("PLIZSHOT"),
                Some("PLIZWNCE"),
                Some("PLIZKILL"),
            ]),
            Self::MightyGorgon => Sounds([
                Some("BGORATTK"),
                Some("BGORDFND"),
                None,
                Some("BGORMOVE"),
                None,
                None,
                Some("BGORWNCE"),
                Some("BGORKILL"),
            ]),
            Self::SerpentFly => Sounds([
                Some("DFLYATTK"),
                Some("DFLYDFND"),
                None,
                Some("DFLYMOVE"),
                None,
                None,
                Some("DFLYWNCE"),
                Some("DFLYKILL"),
            ]),
            Self::Wyvern => Sounds([
                Some("WYVNATTK"),
                Some("WYVNDFND"),
                None,
                Some("WYVNMOVE"),
                None,
                None,
                Some("WYVNWNCE"),
                Some("WYVNKILL"),
            ]),
            Self::WyvernMonarch => Sounds([
                Some("WYVMATTK"),
                Some("WYVMDFND"),
                None,
                Some("WYVMMOVE"),
                None,
                None,
                Some("WYVMWNCE"),
                Some("WYVMKILL"),
            ]),

            Self::BlackKnight => Sounds([
                Some("BKNTATTK"),
                Some("BKNTDFND"),
                None,
                Some("BKNTMOVE"),
                None,
                None,
                Some("BKNTWNCE"),
                Some("BKNTKILL"),
            ]),
            Self::BoneDragon => Sounds([
                Some("BODRATTK"),
                Some("BODRDFND"),
                None,
                Some("BODRMOVE"),
                None,
                None,
                Some("BODRWNCE"),
                Some("BODRKILL"),
            ]),
            Self::DreadKnight => Sounds([
                Some("BLRDATTK"),
                Some("BLRDDFND"),
                None,
                Some("BLRDMOVE"),
                None,
                None,
                Some("BLRDWNCE"),
                Some("BLRDKILL"),
            ]),
            Self::GhostDragon => Sounds([
                Some("GHDRATTK"),
                Some("GHDRDFND"),
                None,
                Some("GHDRMOVE"),
                None,
                None,
                Some("GHDRWNCE"),
                Some("GHDRKILL"),
            ]),
            Self::Lich => Sounds([
                Some("LICHATTK"),
                Some("LICHDFND"),
                None,
                Some("LICHMOVE"),
                None,
                Some("LICHSHOT"),
                Some("LICHWNCE"),
                Some("LICHKILL"),
            ]),
            Self::PowerLich => Sounds([
                Some("PLCHATTK"),
                Some("PLCHDFND"),
                None,
                Some("PLCHMOVE"),
                None,
                Some("PLCHSHOT"),
                Some("PLCHWNCE"),
                Some("PLCHKILL"),
            ]),
            Self::Skeleton => Sounds([
                Some("SKELATTK"),
                Some("SKELDFND"),
                None,
                Some("SKELMOVE"),
                None,
                None,
                Some("SKELWNCE"),
                Some("SKELKILL"),
            ]),
            Self::SkeletonWarrior => Sounds([
                Some("SKLWATTK"),
                Some("SKLWDFND"),
                None,
                Some("SKLWMOVE"),
                None,
                None,
                Some("SKLWWNCE"),
                Some("SKLWKILL"),
            ]),
            Self::Vampire => Sounds([
                Some("VAMPATTK"),
                Some("VAMPDFND"),
                Some("VAMPEXT1"),
                Some("VAMPMOVE"),
                Some("VAMPEXT2"),
                None,
                Some("VAMPWNCE"),
                Some("VAMPKILL"),
            ]),
            Self::VampireLord => Sounds([
                Some("NOSFATTK"),
                Some("NOSFDFND"),
                Some("NOSFEXT1"),
                Some("NOSFMOVE"),
                Some("NOSFEXT2"),
                Some("NOSFSHOT"),
                Some("NOSFWNCE"),
                Some("NOSFKILL"),
            ]),
            Self::WalkingDead => Sounds([
                Some("ZOMBATTK"),
                Some("ZOMBDFND"),
                None,
                Some("ZOMBMOVE"),
                None,
                None,
                Some("ZOMBWNCE"),
                Some("ZOMBKILL"),
            ]),
            Self::Zombie => Sounds([
                Some("ZMBLATTK"),
                Some("ZMBLDFND"),
                None,
                Some("ZMBLMOVE"),
                None,
                None,
                Some("ZMBLWNCE"),
                Some("ZMBLKILL"),
            ]),
            Self::Wight => Sounds([
                Some("WGHTATTK"),
                Some("WGHTDFND"),
                None,
                Some("WGHTMOVE"),
                None,
                None,
                Some("WGHTWNCE"),
                Some("WGHTKILL"),
            ]),
            Self::Wraith => Sounds([
                Some("WRTHATTK"),
                Some("WRTHDFND"),
                None,
                Some("WRTHMOVE"),
                None,
                None,
                Some("WRTHWNCE"),
                Some("WRTHKILL"),
            ]),

            Self::AirElemental => Sounds([
                Some("AELMATTK"),
                Some("AELMDFND"),
                None,
                Some("AELMMOVE"),
                None,
                None,
                Some("AELMWNCE"),
                Some("AELMKILL"),
            ]),
            Self::EarthElemental => Sounds([
                Some("EELMATTK"),
                Some("EELMDFND"),
                None,
                Some("EELMMOVE"),
                None,
                None,
                Some("EELMWNCE"),
                Some("EELMKILL"),
            ]),
            Self::EnergyElemental => Sounds([
                Some("ENERATTK"),
                Some("ENERDFND"),
                None,
                Some("ENERMOVE"),
                None,
                None,
                Some("ENERWNCE"),
                Some("ENERKILL"),
            ]),
            Self::FireElemental => Sounds([
                Some("FELMATTK"),
                Some("FELMDFND"),
                None,
                Some("FELMMOVE"),
                None,
                None,
                Some("FELMWNCE"),
                Some("FELMKILL"),
            ]),
            Self::Firebird => Sounds([
                Some("FIRBATTK"),
                Some("FIRBDFND"),
                None,
                Some("FIRBMOVE"),
                None,
                None,
                Some("FIRBWNCE"),
                Some("FIRBKILL"),
            ]),
            Self::IceElemental => Sounds([
                Some("ICELATTK"),
                Some("ICELDFND"),
                None,
                Some("ICELMOVE"),
                None,
                Some("ICELSHOT"),
                Some("ICELWNCE"),
                Some("ICELKILL"),
            ]),
            Self::MagicElemental => Sounds([
                Some("MGELATTK"),
                Some("MGELDFND"),
                None,
                Some("MGELMOVE"),
                None,
                None,
                Some("MGELWNCE"),
                Some("MGELKILL"),
            ]),
            Self::MagmaElemental => Sounds([
                Some("MAGMATTK"),
                Some("MAGMDFND"),
                None,
                Some("MAGMMOVE"),
                None,
                None,
                Some("MAGMWNCE"),
                Some("MAGMKILL"),
            ]),
            Self::Phoenix => Sounds([
                Some("PHOEATTK"),
                Some("PHOEDFND"),
                None,
                Some("PHOEMOVE"),
                None,
                None,
                Some("PHOEWNCE"),
                Some("PHOEKILL"),
            ]),
            Self::Pixie => Sounds([
                Some("PIXIATTK"),
                Some("PIXIDFND"),
                None,
                Some("PIXIMOVE"),
                None,
                None,
                Some("PIXIWNCE"),
                Some("PIXIKILL"),
            ]),
            Self::PsychicElemental => Sounds([
                Some("PSYCATTK"),
                Some("PSYCDFND"),
                None,
                Some("PSYCMOVE"),
                None,
                None,
                Some("PSYCWNCE"),
                Some("PSYCKILL"),
            ]),
            Self::Sprite => Sounds([
                Some("SPRTATTK"),
                Some("SPRTDFND"),
                None,
                Some("SPRTMOVE"),
                None,
                None,
                Some("SPRTWNCE"),
                Some("SPRTKILL"),
            ]),
            Self::StormElemental => Sounds([
                Some("STORATTK"),
                Some("STORDFND"),
                None,
                Some("STORMOVE"),
                None,
                Some("STORSHOT"),
                Some("STORWNCE"),
                Some("STORKILL"),
            ]),
            Self::WaterElemental => Sounds([
                Some("WELMATTK"),
                Some("WELMDFND"),
                None,
                Some("WELMMOVE"),
                None,
                None,
                Some("WELMWNCE"),
                Some("WELMKILL"),
            ]),

            Self::ArchDevil => Sounds([
                Some("ADVLATTK"),
                Some("ADVLDFND"),
                Some("ADVLEXT1"),
                Some("ADVLMOVE"),
                Some("ADVLEXT2"),
                None,
                Some("ADVLWNCE"),
                Some("ADVLKILL"),
            ]),
            Self::Cerberus => Sounds([
                Some("CERBATTK"),
                Some("CERBDFND"),
                None,
                Some("CERBMOVE"),
                None,
                None,
                Some("CERBWNCE"),
                Some("CERBKILL"),
            ]),
            Self::Demon => Sounds([
                Some("SHDMATTK"),
                Some("SHDMDFND"),
                None,
                Some("SHDMMOVE"),
                None,
                None,
                Some("SHDMWNCE"),
                Some("SHDMKILL"),
            ]),
            Self::Devil => Sounds([
                Some("DEVLATTK"),
                Some("DEVLDFND"),
                Some("DEVLEXT1"),
                Some("DEVLMOVE"),
                Some("DEVLEXT2"),
                None,
                Some("DEVLWNCE"),
                Some("DEVLKILL"),
            ]),
            Self::Efreeti => Sounds([
                Some("EFRTATTK"),
                Some("EFRTDFND"),
                None,
                Some("EFRTMOVE"),
                None,
                None,
                Some("EFRTWNCE"),
                Some("EFRTKILL"),
            ]),
            Self::EfreetSultan => Sounds([
                Some("ESULATTK"),
                Some("ESULDFND"),
                None,
                Some("ESULMOVE"),
                None,
                Some("ESULSHOT"),
                Some("ESULWNCE"),
                Some("ESULKILL"),
            ]),
            Self::Familiar => Sounds([
                Some("FMLRATTK"),
                Some("FMLRDFND"),
                None,
                Some("FMLRMOVE"),
                None,
                None,
                Some("FMLRWNCE"),
                Some("FMLRKILL"),
            ]),
            Self::Gog => Sounds([
                Some("GOGGATTK"),
                Some("GOGGDFND"),
                None,
                Some("GOGGMOVE"),
                None,
                Some("GOGGSHOT"),
                Some("GOGGWNCE"),
                Some("GOGGKILL"),
            ]),
            Self::HellHound => Sounds([
                Some("HHNDATTK"),
                Some("HHNDDFND"),
                None,
                Some("HHNDMOVE"),
                None,
                None,
                Some("HHNDWNCE"),
                Some("HHNDKILL"),
            ]),
            Self::HornedDemon => Sounds([
                Some("DHDMATTK"),
                Some("DHDMDFND"),
                None,
                Some("DHDMMOVE"),
                None,
                None,
                Some("DHDMWNCE"),
                Some("DHDMKILL"),
            ]),
            Self::Imp => Sounds([
                Some("IMPPATTK"),
                Some("IMPPDFND"),
                None,
                Some("IMPPMOVE"),
                None,
                None,
                Some("IMPPWNCE"),
                Some("IMPPKILL"),
            ]),
            Self::Magog => Sounds([
                Some("MGOGATTK"),
                Some("MGOGDFND"),
                None,
                Some("MGOGMOVE"),
                None,
                Some("SPONTCOMB"),
                Some("MGOGWNCE"),
                Some("MGOGKILL"),
            ]),
            Self::PitFiend => Sounds([
                Some("PFNDATTK"),
                Some("PFNDDFND"),
                None,
                Some("PFNDMOVE"),
                None,
                None,
                Some("PFNDWNCE"),
                Some("PFNDKILL"),
            ]),
            Self::PitLord => Sounds([
                Some("PFOEATTK"),
                Some("PFOEDFND"),
                None,
                Some("PFOEMOVE"),
                None,
                None,
                Some("PFOEWNCE"),
                Some("PFOEKILL"),
            ]),

            Self::BattleDwarf => Sounds([
                Some("BDRFATTK"),
                Some("BDRFDFND"),
                None,
                Some("BDRFMOVE"),
                None,
                None,
                Some("BDRFWNCE"),
                Some("BDRFKILL"),
            ]),
            Self::Centaur => Sounds([
                Some("CNTRATTK"),
                Some("CNTRDFND"),
                None,
                Some("CNTRMOVE"),
                None,
                Some("CNTRSHOT"),
                Some("CNTRWNCE"),
                Some("CNTRKILL"),
            ]),
            Self::CentaurCaptain => Sounds([
                Some("ECNTATTK"),
                Some("ECNTDFND"),
                None,
                Some("ECNTMOVE"),
                None,
                None,
                Some("ECNTWNCE"),
                Some("ECNTKILL"),
            ]),
            Self::DendroidGuard => Sounds([
                Some("TREEATTK"),
                Some("TREEDFND"),
                None,
                Some("TREEMOVE"),
                None,
                None,
                Some("TREEWNCE"),
                Some("TREEKILL"),
            ]),
            Self::DendroidSoldier => Sounds([
                Some("BTREATTK"),
                Some("BTREDFND"),
                None,
                Some("BTREMOVE"),
                None,
                None,
                Some("BTREWNCE"),
                Some("BTREKILL"),
            ]),
            Self::Dwarf => Sounds([
                Some("DWRFATTK"),
                Some("DWRFDFND"),
                None,
                Some("DWRFMOVE"),
                None,
                None,
                Some("DWRFWNCE"),
                Some("DWRFKILL"),
            ]),
            Self::GoldDragon => Sounds([
                Some("GODRATTK"),
                Some("GODRDFND"),
                None,
                Some("GODRMOVE"),
                None,
                None,
                Some("GODRWNCE"),
                Some("GODRKILL"),
            ]),
            Self::GrandElf => Sounds([
                Some("GELFATTK"),
                Some("GELFDFND"),
                None,
                Some("GELFMOVE"),
                None,
                Some("GELFSHOT"),
                Some("GELFWNCE"),
                Some("GELFKILL"),
            ]),
            Self::GreenDragon => Sounds([
                Some("GRDRATTK"),
                Some("GRDRDFND"),
                None,
                Some("GRDRMOVE"),
                None,
                None,
                Some("GRDRWNCE"),
                Some("GRDRKILL"),
            ]),
            Self::Pegasus => Sounds([
                Some("PEGAATTK"),
                Some("PEGADFND"),
                None,
                Some("PEGAMOVE"),
                None,
                None,
                Some("PEGAWNCE"),
                Some("PEGAKILL"),
            ]),
            Self::SilverPegasus => Sounds([
                Some("APEGATTK"),
                Some("APEGDFND"),
                None,
                Some("APEGMOVE"),
                None,
                None,
                Some("APEGWNCE"),
                Some("APEGKILL"),
            ]),
            Self::Unicorn => Sounds([
                Some("UNICATTK"),
                Some("UNICDFND"),
                None,
                Some("UNICMOVE"),
                None,
                None,
                Some("UNICWNCE"),
                Some("UNICKILL"),
            ]),
            Self::WarUnicorn => Sounds([
                Some("WUNCATTK"),
                Some("WUNCDFND"),
                None,
                Some("WUNCMOVE"),
                None,
                Some("WUNCSHOT"),
                Some("WUNCWNCE"),
                Some("WUNCKILL"),
            ]),
            Self::WoodElf => Sounds([
                Some("WELFATTK"),
                Some("WELFDFND"),
                None,
                Some("WELFMOVE"),
                None,
                Some("WELFSHOT"),
                Some("WELFWNCE"),
                Some("WELFKILL"),
            ]),

            Self::Beholder => Sounds([
                Some("BHDRATTK"),
                Some("BHDRDFND"),
                None,
                Some("BHDRMOVE"),
                None,
                Some("BHDRSHOT"),
                Some("BHDRWNCE"),
                Some("BHDRKILL"),
            ]),
            Self::BlackDragon => Sounds([
                Some("BKDRATTK"),
                Some("BKDRDFND"),
                None,
                Some("BKDRMOVE"),
                None,
                None,
                Some("BKDRWNCE"),
                Some("BKDRKILL"),
            ]),
            Self::EvilEye => Sounds([
                Some("EVLIATTK"),
                Some("EVLIDFND"),
                None,
                Some("EVLIMOVE"),
                None,
                Some("EVLISHOT"),
                Some("EVLIWNCE"),
                Some("EVLIKILL"),
            ]),
            Self::Harpy => Sounds([
                Some("HARPATTK"),
                Some("HARPDFND"),
                None,
                Some("HARPMOVE"),
                None,
                None,
                Some("HARPWNCE"),
                Some("HARPKILL"),
            ]),
            Self::HarpyHag => Sounds([
                Some("HHAGATTK"),
                Some("HHAGDFND"),
                None,
                Some("HHAGMOVE"),
                None,
                Some("HHAGSHOT"),
                Some("HHAGWNCE"),
                Some("HHAGKILL"),
            ]),
            Self::InfernalTroglodyte => Sounds([
                Some("ITRGATTK"),
                Some("ITRGDFND"),
                None,
                Some("ITRGMOVE"),
                None,
                None,
                Some("ITRGWNCE"),
                Some("ITRGKILL"),
            ]),
            Self::Manticore => Sounds([
                Some("MANTATTK"),
                Some("MANTDFND"),
                None,
                Some("MANTMOVE"),
                None,
                Some("MANTSHOT"),
                Some("MANTWNCE"),
                Some("MANTKILL"),
            ]),
            Self::Medusa => Sounds([
                Some("MEDUATTK"),
                Some("MEDUDFND"),
                None,
                Some("MEDUMOVE"),
                None,
                Some("MEDUSHOT"),
                Some("MEDUWNCE"),
                Some("MEDUKILL"),
            ]),
            Self::MedusaQueen => Sounds([
                Some("MEDQATTK"),
                Some("MEDQDFND"),
                None,
                Some("MEDQMOVE"),
                None,
                Some("MEDQSHOT"),
                Some("MEDQWNCE"),
                Some("MEDQKILL"),
            ]),
            Self::Minotaur => Sounds([
                Some("MINOATTK"),
                Some("MINODFND"),
                None,
                Some("MINOMOVE"),
                None,
                None,
                Some("MINOWNCE"),
                Some("MINOKILL"),
            ]),
            Self::MinotaurKing => Sounds([
                Some("MINKATTK"),
                Some("MINKDFND"),
                None,
                Some("MINKMOVE"),
                None,
                Some("MINKSHOT"),
                Some("MINKWNCE"),
                Some("MINKKILL"),
            ]),
            Self::RedDragon => Sounds([
                Some("RDDRATTK"),
                Some("RDDRDFND"),
                None,
                Some("RDDRMOVE"),
                None,
                None,
                Some("RDDRWNCE"),
                Some("RDDRKILL"),
            ]),
            Self::Scorpicore => Sounds([
                Some("SCRPATTK"),
                Some("SCRPDFND"),
                None,
                Some("SCRPMOVE"),
                None,
                Some("SCRPSHOT"),
                Some("SCRPWNCE"),
                Some("SCRPKILL"),
            ]),
            Self::Troglodyte => Sounds([
                Some("TROGATTK"),
                Some("TROGDFND"),
                None,
                Some("TROGMOVE"),
                None,
                None,
                Some("TROGWNCE"),
                Some("TROGKILL"),
            ]),

            Self::AncientBehemoth => Sounds([
                Some("BMTHATTK"),
                Some("BMTHDFND"),
                None,
                Some("BMTHMOVE"),
                None,
                None,
                Some("BMTHWNCE"),
                Some("BMTHKILL"),
            ]),
            Self::Behemoth => Sounds([
                Some("YBMHATTK"),
                Some("YBMHDFND"),
                None,
                Some("YBMHMOVE"),
                None,
                None,
                Some("YBMHWNCE"),
                Some("YBMHKILL"),
            ]),
            Self::Cyclops => Sounds([
                Some("CCYCATTK"),
                Some("CCYCDFND"),
                None,
                Some("CCYCMOVE"),
                None,
                Some("CCYCSHOT"),
                Some("CCYCWNCE"),
                Some("CCYCKILL"),
            ]),
            Self::CyclopsKing => Sounds([
                Some("CYCLATTK"),
                Some("CYCLDFND"),
                None,
                Some("CYCLMOVE"),
                None,
                Some("CYCLSHOT"),
                Some("CYCLWNCE"),
                Some("CYCLKILL"),
            ]),
            Self::Goblin => Sounds([
                Some("GBLNATTK"),
                Some("GBLNDFND"),
                None,
                Some("GBLNMOVE"),
                None,
                None,
                Some("GBLNWNCE"),
                Some("GBLNKILL"),
            ]),
            Self::WolfRider => Sounds([
                Some("GWRDATTK"),
                Some("GWRDDFND"),
                None,
                Some("GWRDMOVE"),
                None,
                None,
                Some("GWRDWNCE"),
                Some("GWRDKILL"),
            ]),
            Self::Hobgoblin => Sounds([
                Some("HGOBATTK"),
                Some("HGOBDFND"),
                None,
                Some("HGOBMOVE"),
                None,
                None,
                Some("HGOBWNCE"),
                Some("HGOBKILL"),
            ]),
            Self::WolfRaider => Sounds([
                Some("HGWRATTK"),
                Some("HGWRDFND"),
                None,
                Some("HGWRMOVE"),
                None,
                None,
                Some("HGWRWNCE"),
                Some("HGWRKILL"),
            ]),
            Self::Ogre => Sounds([
                Some("OGREATTK"),
                Some("OGREDFND"),
                None,
                Some("OGREMOVE"),
                None,
                None,
                Some("OGREWNCE"),
                Some("OGREKILL"),
            ]),
            Self::OgreMagi => Sounds([
                Some("OGRMATTK"),
                Some("OGRMDFND"),
                None,
                Some("OGRMMOVE"),
                None,
                Some("OGRMSHOT"),
                Some("OGRMWNCE"),
                Some("OGRMKILL"),
            ]),
            Self::Orc => Sounds([
                Some("OORCATTK"),
                Some("OORCDFND"),
                None,
                Some("OORCMOVE"),
                None,
                Some("OORCSHOT"),
                Some("OORCWNCE"),
                Some("OORCKILL"),
            ]),
            Self::OrcChieftain => Sounds([
                Some("ORCCATTK"),
                Some("ORCCDFND"),
                None,
                Some("ORCCMOVE"),
                None,
                Some("ORCCSHOT"),
                Some("ORCCWNCE"),
                Some("ORCCKILL"),
            ]),
            Self::Roc => Sounds([
                Some("ROCCATTK"),
                Some("ROCCDFND"),
                None,
                Some("ROCCMOVE"),
                None,
                None,
                Some("ROCCWNCE"),
                Some("ROCCKILL"),
            ]),
            Self::Thunderbird => Sounds([
                Some("TBRDATTK"),
                Some("TBRDDFND"),
                None,
                Some("TBRDMOVE"),
                None,
                None,
                Some("TBRDWNCE"),
                Some("TBRDKILL"),
            ]),
        }
    }
}

impl Sounds {
    pub fn get(&self, sound: Sound) -> Option<&'static str> {
        self.0[sound as usize]
    }
}

impl Animation {
    pub fn frame_duration(self) -> Duration {
        let ms = match self {
            Self::Standing => 200,
            Self::TurnLeft | Self::TurnRight => 100,
            Self::Moving => 100,
            Self::StartMoving | Self::StopMoving => 75,
            _ => 100,
        };
        Duration::from_millis(ms)
    }
}

impl ContainerType for Animation {
    const CONTAINER_TYPE: u32 = 66;
}

impl AnimationGroupT for Animation {
    fn container_index(self) -> u32 {
        match self {
            Self::Moving => 0,
            Self::MouseOver => 1,
            Self::Standing => 2,
            Self::GettingHit => 3,
            Self::Defend => 4,
            Self::Death => 5,
            Self::UnusedDeath => 6,
            Self::TurnLeft => 7,
            Self::TurnRight => 8,
            // Дублируются
            // TurnLeft_DBL = 9,
            // TurnRight_DBL = 10,
            Self::AttackUp => 11,
            Self::AttackStraight => 12,
            Self::AttackDown => 13,
            Self::ShootUp => 14,
            Self::ShootStraight => 15,
            Self::ShootDown => 16,
            Self::TwoHexAttackUp => 17,
            Self::TwoHexAttackStraight => 18,
            Self::TwoHexAttackDown => 19,
            Self::StartMoving => 20,
            Self::StopMoving => 21,
        }
    }
}
